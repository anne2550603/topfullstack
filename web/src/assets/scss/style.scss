@import './variables';
//reset
* {
    box-sizing: border-box;

    outline:none;
}

html {
    font-size: 13px;
}
body {
    margin:0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background: #f1f1f1;
    -webkit-font-smoothing:antialiased;
}

a {
    color:#999;
}

p{
    line-height: 1.5rem;
}

//colores



@each $colorKey, $color in $colors{
    .text-#{$colorKey} {
        color:$color;
    }
    .bg-#{$colorKey}{
        background-color: $color;
    }
}

//text
@each $var in (left,center,right) {
    .text-#{$var}{
        text-align: $var;
    }
}

//font-size

@each $sizeKey,$size  in $font-sizes {
    .fs-#{$sizeKey} {
        font-size:$size * $base-font-size;
    }
}

//text overflow
.text-ellipsis {
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.w-100{
    width: 100%;
}
.h-100{
    height: 100%;
}

//flex
.d-flex{
    display: flex;
}

.flex-column{
    flex-direction: column;
}
.flex-wrap {
    flex-wrap:wrap
}


@each $key,$value in $flex-jc {
    .jc-#{$key}{
        justify-content:$value;
    }
}



@each $key,$value in $flex-ai {
    .ai-#{$key}{
        align-items: $value;
    }
}

.flex-1 {
    flex:1;
}
.flex-grow-1{
    flex-grow: 1;
}




@each $typeKey,$type in $spacing-types{
    //.m-1
    @each $sizeKey,$size in $spacing-sizes {
        //.mt-1{margin-top:0.25rem;}
        .#{$typeKey}-#{$sizeKey}{
            #{$type}:$size * $spacing-base-size;
        }
    }
    @each $sizeKey,$size in $spacing-sizes{
        //.mt-1{margin-top:0.25rem;}
        .#{$typeKey}x-#{$sizeKey}{
            #{$type}-left:$size * $spacing-base-size;
            #{$type}-right:$size * $spacing-base-size;
        }
        .#{$typeKey}y-#{$sizeKey}{
            #{$type}-top:$size * $spacing-base-size;
            #{$type}-bottom:$size * $spacing-base-size;
        }
    }
     // .mt-1
     @each $directionKey,$direction in $spacing-directions { 
         @each $sizeKey,$size in $spacing-sizes { 
             //.mt-1 {margin-top:0.25rem;}
             .#{$typeKey}#{$directionKey}-#{$sizeKey}{
                 #{$type}-#{$direction}: $size * $spacing-base-size;
             }
         }
          
     }
        
  
    
}

//button
.btn{
    border: none;
    border-radius: 2px;
    font-size: map-get($font-sizes,'sm') * $base-font-size;
    padding:0.2rem 0.6rem;   
    &.btn-lg{
        display: flex;
        justify-self: center;
        align-items: center;
        i{
            color:map-get($colors,'primary');
            font-weight: bold;
            font-size:1.5rem;
            margin-right: 0.5rem;
        }
        background: map-get($colors,'white-1');
        border:1px solid map-get($colors ,'white-2' );
        padding:0.8rem 1rem;
        font-size:1rem;
    }
}

//nav
.nav{
    display: flex;
    justify-content: space-around;
    .nav-item{
        border-bottom: 3px solid transparent;
        padding-bottom: 0.2rem;
        &.active{
            color:map-get($colors,'primary') ;
            border-bottom-color:map-get($colors,'primary');
        }
    }
    &.nav-inverse{
        .nav-item{
            color: map-get($colors,'white' );
            &.active{
                border-bottom-color:map-get($colors , 'white' );
            }
        }
    }
}

// sprite 精灵图片
.sprite{
    background: url(../image/index.png) no-repeat 0 0 ;
    background-size: 375px;
    display: inline-block;
    &.sprite-news{
        width: 23px;
        height: 20px;
        background-position: 63.546% 15.517%;

    }
    &.sprite-arrow{
        width: 10px;
        height: 10px;
        background-position: 38.577% 52.076%;
    }
}


//borders
@each $dir in (top,right,bottom,left) {
    .border-#{dir}{
        border-#{$dir}:1px solid $border-color;
    }
}
